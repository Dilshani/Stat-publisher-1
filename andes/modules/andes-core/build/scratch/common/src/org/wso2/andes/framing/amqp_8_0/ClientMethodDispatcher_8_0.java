/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

/*
 * This file is auto-generated by Qpid Gentools v.0.1 - do not modify.
 * Supported AMQP version:
  *   8-0
  */
 
package org.wso2.andes.framing.amqp_8_0;

import org.wso2.andes.AMQException;
import org.wso2.andes.framing.*;


public interface ClientMethodDispatcher_8_0 extends ClientMethodDispatcher
{

    public boolean dispatchAccessRequestOk(AccessRequestOkBody body, int channelId) throws AMQException;
    public boolean dispatchBasicCancelOk(BasicCancelOkBody body, int channelId) throws AMQException;
    public boolean dispatchBasicConsumeOk(BasicConsumeOkBody body, int channelId) throws AMQException;
    public boolean dispatchBasicDeliver(BasicDeliverBody body, int channelId) throws AMQException;
    public boolean dispatchBasicGetEmpty(BasicGetEmptyBody body, int channelId) throws AMQException;
    public boolean dispatchBasicGetOk(BasicGetOkBody body, int channelId) throws AMQException;
    public boolean dispatchBasicQosOk(BasicQosOkBody body, int channelId) throws AMQException;
    public boolean dispatchBasicRecoverOk(BasicRecoverOkBody body, int channelId) throws AMQException;
    public boolean dispatchBasicReturn(BasicReturnBody body, int channelId) throws AMQException;
    public boolean dispatchChannelAlert(ChannelAlertBody body, int channelId) throws AMQException;
    public boolean dispatchChannelClose(ChannelCloseBody body, int channelId) throws AMQException;
    public boolean dispatchChannelCloseOk(ChannelCloseOkBody body, int channelId) throws AMQException;
    public boolean dispatchChannelFlow(ChannelFlowBody body, int channelId) throws AMQException;
    public boolean dispatchChannelFlowOk(ChannelFlowOkBody body, int channelId) throws AMQException;
    public boolean dispatchChannelOpenOk(ChannelOpenOkBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionClose(ConnectionCloseBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionCloseOk(ConnectionCloseOkBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionOpenOk(ConnectionOpenOkBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionRedirect(ConnectionRedirectBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionSecure(ConnectionSecureBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionStart(ConnectionStartBody body, int channelId) throws AMQException;
    public boolean dispatchConnectionTune(ConnectionTuneBody body, int channelId) throws AMQException;
    public boolean dispatchDtxSelectOk(DtxSelectOkBody body, int channelId) throws AMQException;
    public boolean dispatchDtxStartOk(DtxStartOkBody body, int channelId) throws AMQException;
    public boolean dispatchExchangeBoundOk(ExchangeBoundOkBody body, int channelId) throws AMQException;
    public boolean dispatchExchangeDeclareOk(ExchangeDeclareOkBody body, int channelId) throws AMQException;
    public boolean dispatchExchangeDeleteOk(ExchangeDeleteOkBody body, int channelId) throws AMQException;
    public boolean dispatchFileCancelOk(FileCancelOkBody body, int channelId) throws AMQException;
    public boolean dispatchFileConsumeOk(FileConsumeOkBody body, int channelId) throws AMQException;
    public boolean dispatchFileDeliver(FileDeliverBody body, int channelId) throws AMQException;
    public boolean dispatchFileOpen(FileOpenBody body, int channelId) throws AMQException;
    public boolean dispatchFileOpenOk(FileOpenOkBody body, int channelId) throws AMQException;
    public boolean dispatchFileQosOk(FileQosOkBody body, int channelId) throws AMQException;
    public boolean dispatchFileReturn(FileReturnBody body, int channelId) throws AMQException;
    public boolean dispatchFileStage(FileStageBody body, int channelId) throws AMQException;
    public boolean dispatchQueueBindOk(QueueBindOkBody body, int channelId) throws AMQException;
    public boolean dispatchQueueDeclareOk(QueueDeclareOkBody body, int channelId) throws AMQException;
    public boolean dispatchQueueDeleteOk(QueueDeleteOkBody body, int channelId) throws AMQException;
    public boolean dispatchQueuePurgeOk(QueuePurgeOkBody body, int channelId) throws AMQException;
    public boolean dispatchStreamCancelOk(StreamCancelOkBody body, int channelId) throws AMQException;
    public boolean dispatchStreamConsumeOk(StreamConsumeOkBody body, int channelId) throws AMQException;
    public boolean dispatchStreamDeliver(StreamDeliverBody body, int channelId) throws AMQException;
    public boolean dispatchStreamQosOk(StreamQosOkBody body, int channelId) throws AMQException;
    public boolean dispatchStreamReturn(StreamReturnBody body, int channelId) throws AMQException;
    public boolean dispatchTestContent(TestContentBody body, int channelId) throws AMQException;
    public boolean dispatchTestContentOk(TestContentOkBody body, int channelId) throws AMQException;
    public boolean dispatchTestInteger(TestIntegerBody body, int channelId) throws AMQException;
    public boolean dispatchTestIntegerOk(TestIntegerOkBody body, int channelId) throws AMQException;
    public boolean dispatchTestString(TestStringBody body, int channelId) throws AMQException;
    public boolean dispatchTestStringOk(TestStringOkBody body, int channelId) throws AMQException;
    public boolean dispatchTestTable(TestTableBody body, int channelId) throws AMQException;
    public boolean dispatchTestTableOk(TestTableOkBody body, int channelId) throws AMQException;
    public boolean dispatchTxCommitOk(TxCommitOkBody body, int channelId) throws AMQException;
    public boolean dispatchTxRollbackOk(TxRollbackOkBody body, int channelId) throws AMQException;
    public boolean dispatchTxSelectOk(TxSelectOkBody body, int channelId) throws AMQException;

}